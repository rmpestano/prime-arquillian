<!-- Components having these attributes must extend from HtmlInputText so all the attributes are defined as ignoreInComponet 
    which will ignore code generation in component class since they are already defined in parent HtmlInputText
-->
<attribute>
    <name>accesskey</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Access key to transfer focus to the input element.</description>
</attribute>
<attribute>
    <name>alt</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Alternate textual description of the input element.</description>
</attribute>
<attribute>
    <name>autocomplete</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Controls browser autocomplete behavior.</description>
</attribute>
<attribute>
    <name>dir</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Direction indication for text that does not inherit directionality.</description>
</attribute>
<attribute>
    <name>disabled</name>
    <required>false</required>
    <type>boolean</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Disables the input element, default is false.</description>
</attribute>
<attribute>
    <name>label</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>A localized user presentable name.</description>
</attribute>
<attribute>
    <name>lang</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>A localized user presentable name.</description>
</attribute>
<attribute>
    <name>maxlength</name>
    <required>false</required>
    <type>int</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Maximum number of characters that may be entered in this field.</description>
</attribute>
<attribute>
    <name>onblur</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when input element loses focus.</description>
</attribute>
<attribute>
    <name>onchange</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when input element loses focus and its value has been modified since gaining focus.</description>
</attribute>
<attribute>
    <name>onclick</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when input element is clicked.</description>
</attribute>
<attribute>
    <name>ondblclick</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when input element is double clicked.</description>
</attribute>
<attribute>
    <name>onfocus</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when input element receives focus.</description>
</attribute>
<attribute>
    <name>onkeydown</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when a key is pressed down over input element.</description>
</attribute>
<attribute>
    <name>onkeypress</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when a key is pressed and released over input element.</description>
</attribute>
<attribute>
    <name>onkeyup</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when a key is released over input element.</description>
</attribute>
<attribute>
    <name>onmousedown</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when a pointer input element is pressed down over input element.</description>
</attribute>
<attribute>
    <name>onmousemove</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when a pointer input element is moved within input element.</description>
</attribute>
<attribute>
    <name>onmouseout</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when a pointer input element is moved away from input element.</description>
</attribute>
<attribute>
    <name>onmouseover</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when a pointer input element is moved onto input element.</description>
</attribute>
<attribute>
    <name>onmouseup</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when a pointer input element is released over input element.</description>
</attribute>
<attribute>
    <name>onselect</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Client side callback to execute when text within input element is selected by user.</description>
</attribute>
<attribute>
    <name>readonly</name>
    <required>false</required>
    <type>boolean</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Flag indicating that this input element will prevent changes by the user.</description>
</attribute>
<attribute>
    <name>size</name>
    <required>false</required>
    <type>int</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Number of characters used to determine the width of the input element.</description>
</attribute>
<attribute>
    <name>style</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Inline style of the component.</description>
</attribute>
<attribute>
    <name>styleClass</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Style class of the component.</description>
</attribute>
<attribute>
    <name>tabindex</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Advisory tooltip information.</description>
</attribute>
<attribute>
    <name>title</name>
    <required>false</required>
    <type>java.lang.String</type>
    <ignoreInComponent>true</ignoreInComponent>
    <description>Advisory tooltip information.</description>
</attribute>
<attribute>
    <name>placeholder</name>
    <required>false</required>
    <type>java.lang.String</type>
    <description>The placeholder attribute specifies a short hint that describes the expected value of an input field.</description>
</attribute>