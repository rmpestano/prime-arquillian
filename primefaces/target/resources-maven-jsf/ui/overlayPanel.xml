<?xml version="1.0" encoding="ISO-8859-1"?>
<component>
   <tag>overlayPanel</tag>
   <tagClass>org.primefaces.component.overlaypanel.OverlayPanelTag</tagClass>
   <componentClass>org.primefaces.component.overlaypanel.OverlayPanel</componentClass>
   <componentType>org.primefaces.component.OverlayPanel</componentType>
   <componentFamily>org.primefaces.component</componentFamily>
   <rendererType>org.primefaces.component.OverlayPanelRenderer</rendererType>
   <rendererClass>org.primefaces.component.overlaypanel.OverlayPanelRenderer</rendererClass>
   <parent>javax.faces.component.UIPanel</parent>
   <description>OverlayPanel is a generic container component that is displayed as a popup.</description>
   <interfaces>
      <interface>
         <name>org.primefaces.component.api.Widget</name>
      </interface>
   </interfaces>
   <attributes>
      <attribute>
         <name>id</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <literal>true</literal>
         <description>Unique identifier of the component in a namingContainer.</description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Boolean value to specify the rendering of the component, when set to false component will not be rendered.</description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <type>javax.faces.component.UIComponent</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>An el expression referring to a server side UIComponent instance in a backing bean.</description>
      </attribute>
      <attribute>
         <name>widgetVar</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>false</ignoreInComponent>
         <description>Name of the client side widget.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Inline style of the component.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Style class of the component.</description>
      </attribute>
      <attribute>
         <name>for</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Identifier of the target component to show the panel.</description>
      </attribute>
      <attribute>
         <name>showEvent</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Event to show the overlay panel, default is "click".</description>
      </attribute>
      <attribute>
         <name>hideEvent</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Event to hide the overlay panel, default is "click".</description>
      </attribute>
      <attribute>
         <name>showEffect</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Effect to display when showing the panel.</description>
      </attribute>
      <attribute>
         <name>hideEffect</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Effect to display when hiding the panel.</description>
      </attribute>
      <attribute>
         <name>appendToBody</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>When set true, panel is appended as a child of document body.</description>
      </attribute>
      <attribute>
         <name>onShow</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Client side callback to execute when panel is displayed.</description>
      </attribute>
      <attribute>
         <name>onHide</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Client side callback to execute when panel is hidden.</description>
      </attribute>
      <attribute>
         <name>my</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Position of the panel relative to the target.</description>
      </attribute>
      <attribute>
         <name>at</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Position of the target relative to the panel.</description>
      </attribute>
      <attribute>
         <name>dynamic</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Dynamic mode allows overlay panel to fetch it's contents before it's shown rather than on page load
            which is useful to reduce initial page load times. Default is false.</description>
      </attribute>
      <attribute>
         <name>dismissable</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>true</defaultValue>
         <description>When set true, clicking outside of the panel hides the overlay.</description>
      </attribute>
      <attribute>
         <name>showCloseIcon</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Displays a close icon to hide the overlay, default is false.</description>
      </attribute>
   </attributes>
   <resources>
      <resource>
         <name>primefaces.css</name>
      </resource>
      <resource>
         <name>jquery/jquery.js</name>
      </resource>
      <resource>
         <name>jquery/jquery-plugins.js</name>
      </resource>
      <resource>
         <name>primefaces.js</name>
      </resource>
   </resources>
</component>