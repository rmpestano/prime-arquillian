<?xml version="1.0" encoding="ISO-8859-1"?>
<component>
   <tag>autoComplete</tag>
   <tagClass>org.primefaces.component.autocomplete.AutoCompleteTag</tagClass>
   <componentHandlerClass>org.primefaces.component.autocomplete.AutoCompleteHandler</componentHandlerClass>
   <componentClass>org.primefaces.component.autocomplete.AutoComplete</componentClass>
   <componentType>org.primefaces.component.AutoComplete</componentType>
   <componentFamily>org.primefaces.component</componentFamily>
   <rendererType>org.primefaces.component.AutoCompleteRenderer</rendererType>
   <rendererClass>org.primefaces.component.autocomplete.AutoCompleteRenderer</rendererClass>
   <parent>javax.faces.component.html.HtmlInputText</parent>
   <description>AutoComplete provides live suggestions while an input is being typed.</description>
   <interfaces>
      <interface>
         <name>org.primefaces.component.api.Widget</name>
      </interface>
      <interface>
         <name>org.primefaces.component.api.InputHolder</name>
      </interface>
      <interface>
         <name>org.primefaces.component.api.MixedClientBehaviorHolder</name>
      </interface>
   </interfaces>
   <attributes>
      <attribute>
         <name>id</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <literal>true</literal>
         <description>Unique identifier of the component in a namingContainer.</description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Boolean value to specify the rendering of the component, when set to false component will not be rendered.</description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <type>javax.faces.component.UIComponent</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>An el expression referring to a server side UIComponent instance in a backing bean.</description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <type>java.lang.Object</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Value of the component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <type>java.faces.convert.Converter</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. 
    In case it's a static text, it must refer to a converter id.</description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>When set true, process validations logic is executed at apply request values phase for this component. Default is false.</description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Marks component as required.</description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <type>javax.faces.validator.Validator</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>A method expression referring to a method validationg the input.</description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <type>javax.faces.event.ValueChangeListener</type>
         <ignoreInComponent>true</ignoreInComponent>
         <method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
         <description>A method binding expression referring to a method for handling a valuchangeevent.</description>
      </attribute>
      <attribute>
         <name>requiredMessage</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Message to display when required field validation fails.</description>
      </attribute>
      <attribute>
         <name>converterMessage</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Message to display when conversion fails.</description>
      </attribute>
      <attribute>
         <name>validatorMessage</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Message to display when validation fails.</description>
      </attribute>
      <!-- Components having these attributes must extend from HtmlInputText so all the attributes are defined as ignoreInComponet 
    which will ignore code generation in component class since they are already defined in parent HtmlInputText
-->
      <attribute>
         <name>accesskey</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Access key to transfer focus to the input element.</description>
      </attribute>
      <attribute>
         <name>alt</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Alternate textual description of the input element.</description>
      </attribute>
      <attribute>
         <name>autocomplete</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Controls browser autocomplete behavior.</description>
      </attribute>
      <attribute>
         <name>dir</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Direction indication for text that does not inherit directionality.</description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <type>boolean</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Disables the input element, default is false.</description>
      </attribute>
      <attribute>
         <name>label</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>A localized user presentable name.</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>A localized user presentable name.</description>
      </attribute>
      <attribute>
         <name>maxlength</name>
         <required>false</required>
         <type>int</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Maximum number of characters that may be entered in this field.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when input element loses focus.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when input element loses focus and its value has been modified since gaining focus.</description>
      </attribute>
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when input element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when input element is double clicked.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when input element receives focus.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a key is pressed down over input element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a key is pressed and released over input element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a key is released over input element.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a pointer input element is pressed down over input element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a pointer input element is moved within input element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a pointer input element is moved away from input element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a pointer input element is moved onto input element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a pointer input element is released over input element.</description>
      </attribute>
      <attribute>
         <name>onselect</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when text within input element is selected by user.</description>
      </attribute>
      <attribute>
         <name>readonly</name>
         <required>false</required>
         <type>boolean</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Flag indicating that this input element will prevent changes by the user.</description>
      </attribute>
      <attribute>
         <name>size</name>
         <required>false</required>
         <type>int</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Number of characters used to determine the width of the input element.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Inline style of the component.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Style class of the component.</description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Advisory tooltip information.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Advisory tooltip information.</description>
      </attribute>
      <attribute>
         <name>placeholder</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>The placeholder attribute specifies a short hint that describes the expected value of an input field.</description>
      </attribute>
      <attribute>
         <name>widgetVar</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>false</ignoreInComponent>
         <description>Name of the client side widget.</description>
      </attribute>
      <attribute>
         <name>completeMethod</name>
         <required>false</required>
         <type>javax.el.MethodExpression</type>
         <method-signature>java.util.List completeMethod(java.lang.String)</method-signature>
         <description>Method providing suggestions.</description>
      </attribute>
      <attribute>
         <name>var</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Name of the iterator used in pojo based suggestion.</description>
      </attribute>
      <attribute>
         <name>itemLabel</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Label of the item.</description>
      </attribute>
      <attribute>
         <name>itemValue</name>
         <required>false</required>
         <type>java.lang.Object</type>
         <description>Value of the item.</description>
      </attribute>
      <attribute>
         <name>maxResults</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>java.lang.Integer.MAX_VALUE</defaultValue>
         <description>Maximum number of results to be displayed. Default is unlimited.</description>
      </attribute>
      <attribute>
         <name>minQueryLength</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>1</defaultValue>
         <description>Number of characters to be typed before starting to query. Default is 1.</description>
      </attribute>
      <attribute>
         <name>queryDelay</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>300</defaultValue>
         <description>Delay to wait in milliseconds before sending each query to the server. Default is 300.</description>
      </attribute>
      <attribute>
         <name>queryDeletionDelay</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>600</defaultValue>
         <description>Delay to wait in milliseconds, after deleting a character and before sending each query to the server Default is 600.</description>
      </attribute>
      <attribute>
         <name>forceSelection</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>When enabled, autoComplete only accepts input from the selection list. Default is false.</description>
      </attribute>
      <attribute>
         <name>scrollHeight</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>java.lang.Integer.MAX_VALUE</defaultValue>
         <description>Defines the height of the viewport for autocomplete suggestions.</description>
      </attribute>
      <attribute>
         <name>effect</name>
         <required>false</required>
         <type>java.lang.String</type>
      </attribute>
      <attribute>
         <name>effectDuration</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>400</defaultValue>
      </attribute>
      <attribute>
         <name>dropdown</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
      </attribute>
      <attribute>
         <name>panelStyle</name>
         <required>false</required>
         <type>java.lang.String</type>
      </attribute>
      <attribute>
         <name>panelStyleClass</name>
         <required>false</required>
         <type>java.lang.String</type>
      </attribute>
      <attribute>
         <name>multiple</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
      </attribute>
      <attribute>
         <name>itemtipMyPosition</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Position of itemtip with respect to item. Default is "left top".</description>
      </attribute>
      <attribute>
         <name>itemtipAtPosition</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Position of item with respect to item. Default is "right bottom".</description>
      </attribute>
      <attribute>
         <name>cache</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>When enabled autocomplete caches the searched result list.</description>
      </attribute>
      <attribute>
         <name>cacheTimeout</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>300000</defaultValue>
         <description>Timeout value for cached results.</description>
      </attribute>
      <attribute>
         <name>emptyMessage</name>
         <required>false</required>
         <type>java.lang.String</type>
         <defaultValue/>
         <description>Text to display when there is no data to display.</description>
      </attribute>
      <attribute>
         <name>appendTo</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Appends the overlay to the element defined by search expression. Defaults to document body.</description>
      </attribute>
   </attributes>
   <resources>
      <resource>
         <name>primefaces.css</name>
      </resource>
      <resource>
         <name>jquery/jquery.js</name>
      </resource>
      <resource>
         <name>jquery/jquery-plugins.js</name>
      </resource>
      <resource>
         <name>primefaces.js</name>
      </resource>
   </resources>
</component>