<?xml version="1.0" encoding="ISO-8859-1"?>
<component>
   <tag>calendar</tag>
   <tagClass>org.primefaces.component.calendar.CalendarTag</tagClass>
   <componentClass>org.primefaces.component.calendar.Calendar</componentClass>
   <componentType>org.primefaces.component.Calendar</componentType>
   <componentFamily>org.primefaces.component</componentFamily>
   <rendererType>org.primefaces.component.CalendarRenderer</rendererType>
   <rendererClass>org.primefaces.component.calendar.CalendarRenderer</rendererClass>
   <parent>javax.faces.component.html.HtmlInputText</parent>
   <description>Calendar is an input component used to provide a date. Other than basic features calendar supports paging, localization, ajax selection and more.</description>
   <interfaces>
      <interface>
         <name>org.primefaces.component.api.Widget</name>
      </interface>
      <interface>
         <name>org.primefaces.component.api.InputHolder</name>
      </interface>
      <interface>
         <name>org.primefaces.component.api.MixedClientBehaviorHolder</name>
      </interface>
   </interfaces>
   <attributes>
      <attribute>
         <name>id</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <literal>true</literal>
         <description>Unique identifier of the component in a namingContainer.</description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Boolean value to specify the rendering of the component, when set to false component will not be rendered.</description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <type>javax.faces.component.UIComponent</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>An el expression referring to a server side UIComponent instance in a backing bean.</description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <type>java.lang.Object</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Value of the component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <type>java.faces.convert.Converter</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance. 
    In case it's a static text, it must refer to a converter id.</description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>When set true, process validations logic is executed at apply request values phase for this component. Default is false.</description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Marks component as required.</description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <type>javax.faces.validator.Validator</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>A method expression referring to a method validationg the input.</description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <type>javax.faces.event.ValueChangeListener</type>
         <ignoreInComponent>true</ignoreInComponent>
         <method-signature>void valueChange(javax.faces.event.ValueChangeEvent)</method-signature>
         <description>A method binding expression referring to a method for handling a valuchangeevent.</description>
      </attribute>
      <attribute>
         <name>requiredMessage</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Message to display when required field validation fails.</description>
      </attribute>
      <attribute>
         <name>converterMessage</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Message to display when conversion fails.</description>
      </attribute>
      <attribute>
         <name>validatorMessage</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Message to display when validation fails.</description>
      </attribute>
      <!-- Components having these attributes must extend from HtmlInputText so all the attributes are defined as ignoreInComponet 
    which will ignore code generation in component class since they are already defined in parent HtmlInputText
-->
      <attribute>
         <name>accesskey</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Access key to transfer focus to the input element.</description>
      </attribute>
      <attribute>
         <name>alt</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Alternate textual description of the input element.</description>
      </attribute>
      <attribute>
         <name>autocomplete</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Controls browser autocomplete behavior.</description>
      </attribute>
      <attribute>
         <name>dir</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Direction indication for text that does not inherit directionality.</description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <type>boolean</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Disables the input element, default is false.</description>
      </attribute>
      <attribute>
         <name>label</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>A localized user presentable name.</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>A localized user presentable name.</description>
      </attribute>
      <attribute>
         <name>maxlength</name>
         <required>false</required>
         <type>int</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Maximum number of characters that may be entered in this field.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when input element loses focus.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when input element loses focus and its value has been modified since gaining focus.</description>
      </attribute>
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when input element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when input element is double clicked.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when input element receives focus.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a key is pressed down over input element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a key is pressed and released over input element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a key is released over input element.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a pointer input element is pressed down over input element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a pointer input element is moved within input element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a pointer input element is moved away from input element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a pointer input element is moved onto input element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when a pointer input element is released over input element.</description>
      </attribute>
      <attribute>
         <name>onselect</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Client side callback to execute when text within input element is selected by user.</description>
      </attribute>
      <attribute>
         <name>readonly</name>
         <required>false</required>
         <type>boolean</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Flag indicating that this input element will prevent changes by the user.</description>
      </attribute>
      <attribute>
         <name>size</name>
         <required>false</required>
         <type>int</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Number of characters used to determine the width of the input element.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Inline style of the component.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Style class of the component.</description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Advisory tooltip information.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>true</ignoreInComponent>
         <description>Advisory tooltip information.</description>
      </attribute>
      <attribute>
         <name>placeholder</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>The placeholder attribute specifies a short hint that describes the expected value of an input field.</description>
      </attribute>
      <attribute>
         <name>widgetVar</name>
         <required>false</required>
         <type>java.lang.String</type>
         <ignoreInComponent>false</ignoreInComponent>
         <description>Name of the client side widget.</description>
      </attribute>
      <attribute>
         <name>mindate</name>
         <required>false</required>
         <type>java.lang.Object</type>
         <description>Sets calendar's minimum visible date.</description>
      </attribute>
      <attribute>
         <name>maxdate</name>
         <required>false</required>
         <type>java.lang.Object</type>
         <description>Sets calendar's maximum visible date.</description>
      </attribute>
      <attribute>
         <name>pages</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>1</defaultValue>
         <description>Enables multiple page rendering.</description>
      </attribute>
      <attribute>
         <name>mode</name>
         <required>false</required>
         <type>java.lang.String</type>
         <defaultValue>popup</defaultValue>
         <description>Defines how the calendar will be displayed. Default is popup</description>
      </attribute>
      <attribute>
         <name>pattern</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>DateFormat pattern for localization.</description>
      </attribute>
      <attribute>
         <name>locale</name>
         <required>false</required>
         <type>java.lang.Object</type>
         <description>Locale to be used for labels and conversion.</description>
      </attribute>
      <attribute>
         <name>navigator</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Enables month/year navigator. Default is false.</description>
      </attribute>
      <attribute>
         <name>timeZone</name>
         <required>false</required>
         <type>java.lang.Object</type>
         <description>String or a java.util.TimeZone instance to specify the timezone used for date conversion, defaults to TimeZone.getDefault()</description>
      </attribute>
      <attribute>
         <name>readonlyInput</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Makes input text of a popup calendar readonly. Default is false.</description>
      </attribute>
      <attribute>
         <name>showButtonPanel</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Visibility of button panel containing today and done buttons. Default is false.</description>
      </attribute>
      <attribute>
         <name>effect</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Effect to use when displaying and showing the popup calendar.</description>
      </attribute>
      <attribute>
         <name>effectDuration</name>
         <required>false</required>
         <type>java.lang.String</type>
         <defaultValue>normal</defaultValue>
         <description>Duration of the effect. Default is normal.</description>
      </attribute>
      <attribute>
         <name>showOn</name>
         <required>false</required>
         <type>java.lang.String</type>
         <defaultValue>focus</defaultValue>
         <description>Client side event that displays the popup calendar.</description>
      </attribute>
      <attribute>
         <name>showWeek</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Displays the week number next to each week. Default is false.</description>
      </attribute>
      <attribute>
         <name>disabledWeekends</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Disables weekend columns. Default is false.</description>
      </attribute>
      <attribute>
         <name>showOtherMonths</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Displays days belonging to other months. Default is false.</description>
      </attribute>
      <attribute>
         <name>selectOtherMonths</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Enables selection of days belonging to other months. Default is false.</description>
      </attribute>
      <attribute>
         <name>yearRange</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Year range for the navigator, default is "c-10:c+10"</description>
      </attribute>
      <attribute>
         <name>timeOnly</name>
         <required>false</required>
         <type>java.lang.Boolean</type>
         <defaultValue>false</defaultValue>
         <description>Shows only time picker without date.</description>
      </attribute>
      <attribute>
         <name>stepHour</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>1</defaultValue>
         <description>Hour steps, default is 1.</description>
      </attribute>
      <attribute>
         <name>stepMinute</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>1</defaultValue>
         <description>Minute steps, default is 1.</description>
      </attribute>
      <attribute>
         <name>stepSecond</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>1</defaultValue>
         <description>Second steps, default is 1.</description>
      </attribute>
      <attribute>
         <name>minHour</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>0</defaultValue>
         <description>Minimum boundary for hour selection. Default is 0.</description>
      </attribute>
      <attribute>
         <name>maxHour</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>23</defaultValue>
         <description>Maximum boundary for hour selection. Default is 23.</description>
      </attribute>
      <attribute>
         <name>minMinute</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>0</defaultValue>
         <description>Minimum boundary for minute selection. Default is 0.</description>
      </attribute>
      <attribute>
         <name>maxMinute</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>59</defaultValue>
         <description>Maximum boundary for minute selection. Default is 59.</description>
      </attribute>
      <attribute>
         <name>minSecond</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>0</defaultValue>
         <description>Minimum boundary for second selection. Default is 0.</description>
      </attribute>
      <attribute>
         <name>maxSecond</name>
         <required>false</required>
         <type>java.lang.Integer</type>
         <defaultValue>59</defaultValue>
         <description>Maximum boundary for second selection. Default is 59.</description>
      </attribute>
      <attribute>
         <name>pagedate</name>
         <required>false</required>
         <type>java.lang.Object</type>
         <description>Sets the initial date when value is not populated.</description>
      </attribute>
      <attribute>
         <name>beforeShowDay</name>
         <required>false</required>
         <type>java.lang.String</type>
         <description>Callback to execute before displaying a date, used to customize date display.</description>
      </attribute>
      <attribute>
         <name>mask</name>
         <required>false</required>
         <type>java.lang.String</type>
         <defaultValue>false</defaultValue>
         <description>Defines if a mask should be applied to the input field. Default value is "false" and valid values to enable are "true" that uses the pattern as the mask or a custom template. Refer to
            inputMask component for more information about custom templates.</description>
      </attribute>
   </attributes>
   <resources>
      <resource>
         <name>primefaces.css</name>
      </resource>
      <resource>
         <name>jquery/jquery.js</name>
      </resource>
      <resource>
         <name>jquery/jquery-plugins.js</name>
      </resource>
      <resource>
         <name>primefaces.js</name>
      </resource>
   </resources>
</component>