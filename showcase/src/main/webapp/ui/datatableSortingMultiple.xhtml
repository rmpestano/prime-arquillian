<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="../templates/ui.xhtml">
    
    <ui:define name="head">
        <style type="text/css">

        </style>
        
        <script type="text/javascript">
//<![CDATA[

//]]>
        </script>
    </ui:define>

    <ui:define name="content">
        <h1 class="title ui-widget-header ui-corner-all">DataTable - Multiple Sorting</h1>

        <div class="entry">
            <p>Multiple column sorting is enabled by holding the meta key (ctrl or command). Dynamic columns are supported as well with or
            without LazyDataModel support.</p>

            <h:form>

                <p:dataTable id="dataTable" var="car" value="#{tableBean.carsLarge}" sortMode="multiple" rows="25" paginator="true">
                    <f:facet name="header">
                        Ajax Sorting
                    </f:facet>

                    <p:column id="modelHeader" sortBy="model" headerText="Model">
                        <h:outputText value="#{car.model}" />
                    </p:column>

                    <p:column sortBy="year" headerText="Year">
                        <h:outputText value="#{car.year}" />
                    </p:column>

                    <p:column sortBy="manufacturer" headerText="Manufacturer">
                        <h:outputText value="#{car.manufacturer}" />
                    </p:column>

                    <p:column sortBy="color" headerText="Color">
                        <h:outputText value="#{car.color}" />
                    </p:column>
                </p:dataTable>

            </h:form>

            <h3>Source</h3>
            <p:tabView>                
                <p:tab title="datatableSortingMultiple.xhtml">
                    <pre name="code" class="brush:xml">
&lt;h:form&gt;

    &lt;p:dataTable id="dataTable" var="car" value="\#{tableBean.carsSmall}" sortMode="multiple" rows="25" paginator="true"&gt;
        &lt;f:facet name="header"&gt;
            Ajax Sorting
        &lt;/f:facet&gt;

        &lt;p:column sortBy="model" headerText="Model"&gt;
            &lt;h:outputText value="\#{car.model}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column sortBy="year" headerText="Year"&gt;
            &lt;h:outputText value="\#{car.year}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column sortBy="manufacturer" headerText="Manufacturer"&gt;
            &lt;h:outputText value="\#{car.manufacturer}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column sortBy="color" headerText="Color"&gt;
            &lt;h:outputText value="\#{car.color}" /&gt;
        &lt;/p:column&gt;
    &lt;/p:dataTable&gt;

&lt;/h:form&gt;
                    </pre>
                </p:tab>

                <p:tab title="TableBean.java">
                    <pre name="code" class="brush:java">
package org.primefaces.examples.view;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.primefaces.examples.domain.Car;

public class TableBean implements Serializable {

	static {
		colors = new String[10];
		colors[0] = "Black";
		colors[1] = "White";
		colors[2] = "Green";
		colors[3] = "Red";
		colors[4] = "Blue";
		colors[5] = "Orange";
		colors[6] = "Silver";
		colors[7] = "Yellow";
		colors[8] = "Brown";
		colors[9] = "Maroon";

		manufacturers = new String[10];
		manufacturers[0] = "Mercedes";
		manufacturers[1] = "BMW";
		manufacturers[2] = "Volvo";
		manufacturers[3] = "Audi";
		manufacturers[4] = "Renault";
		manufacturers[5] = "Opel";
		manufacturers[6] = "Volkswagen";
		manufacturers[7] = "Chrysler";
		manufacturers[8] = "Ferrari";
		manufacturers[9] = "Ford";
	}

    private final static String[] colors;

	private final static String[] manufacturers;

	private List&lt;Car&gt; carsSmall;

	public TableBean() {
		carsSmall = new ArrayList&lt;Car&gt;();

		populateRandomCars(cars, 9);
	}

	private void populateRandomCars(List&lt;Car&gt; list, int size) {
		for(int i = 0 ; i &lt; size ; i++)
			list.add(new Car(getRandomModel(), getRandomYear(), getRandomManufacturer(), getRandomColor()));
	}

	public List&lt;Car&gt; getCarsSmall() {
		return carsSmall;
	}

	private int getRandomYear() {
		return (int) (Math.random() * 50 + 1960);
	}

	private String getRandomColor() {
		return colors[(int) (Math.random() * 10)];
	}

	private String getRandomManufacturer() {
		return manufacturers[(int) (Math.random() * 10)];
	}

	private String getRandomModel() {
		return UUID.randomUUID().toString().substring(0, 8);
	}
}
                    </pre>
                </p:tab>
            </p:tabView>

        </div>

    </ui:define>
</ui:composition>
