<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="../templates/ui.xhtml">

    <ui:define name="content">

        <h1 class="title ui-widget-header ui-corner-all">MeterGauge Chart</h1>
        <div class="entry">
            <p>MeterGaugeChart is created with a MeterGaugeChartModel.</p>
            
            <p:chart type="metergauge" model="#{chartBean.meterGaugeModel1}" style="width:400px;height:250px" />
            
            <br /><br />
            
            <p:chart type="metergauge" model="#{chartBean.meterGaugeModel2}" style="width:400px;height:250px" />
            
            <h3>Source</h3>
            <p:tabView>
                <p:tab title="meterGaugeChart.xhtml">
                    <pre name="code" class="brush:xml">
&lt;p:chart type="metergauge" model="\#{chartBean.meterGaugeModel1}" style="width:400px;height:250px" /&gt;

&lt;p:chart type="metergauge" model="\#{chartBean.meterGaugeModel2}" style="width:400px;height:250px" /&gt;
                    </pre>
                </p:tab>

                <p:tab title="ChartBean.java">
            <pre name="code" class="brush:java">
package org.primefaces.examples;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.faces.bean.ManagedBean;
import org.primefaces.model.chart.MeterGaugeChartModel;

@ManagedBean
public class ChartBean implements Serializable {

    private MeterGaugeChartModel meterGaugeModel1;
    private MeterGaugeChartModel meterGaugeModel2;

	public ChartBean() {
        createMeterGaugeModels();
	}

    public MeterGaugeChartModel getMeterGaugeModel1() {
        return meterGaugeModel1;
    }
    
    public MeterGaugeChartModel getMeterGaugeModel2() {
        return meterGaugeModel2;
    }

    private MeterGaugeChartModel initMeterGaugeModel() {
        List&lt;Number&gt; intervals = new ArrayList&lt;Number&gt;(){{
            add(20);
            add(50);
            add(120);
            add(220);
        }};
        
        return new MeterGaugeChartModel(140, intervals);
    }

    private void createMeterGaugeModels() {
        meterGaugeModel1 = initMeterGaugeModel();
        meterGaugeModel1.setTitle("MeterGauge Chart");
        meterGaugeModel1.setGaugeLabel("km/h");
        
        meterGaugeModel2 = initMeterGaugeModel();
        meterGaugeModel2.setTitle("Custom Options");
        meterGaugeModel2.setSeriesColors("66cc66,93b75f,E7E658,cc6666");
        meterGaugeModel2.setGaugeLabel("km/h");
        meterGaugeModel2.setGaugeLabelPosition("bottom");
        meterGaugeModel2.setShowTickLabels(false);
        meterGaugeModel2.setLabelHeightAdjust(110);
        meterGaugeModel2.setIntervalOuterRadius(130);
    }

}
            </pre>
                </p:tab>
            </p:tabView>
        </div>
    </ui:define>
</ui:composition>
