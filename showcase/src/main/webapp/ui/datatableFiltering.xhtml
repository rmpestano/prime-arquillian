<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="../templates/ui.xhtml">

    <ui:define name="head">
        <style type="text/css">
            .ui-datatable table {
                table-layout: fixed;
            }
            
            .ui-datatable .ui-datatable-header {
                text-align: right !important;
            }
            
            .year-spinner input {
                width: 100px
            }
            
            .ui-button-text-only .ui-button-text {
                padding: 0.3em 0.4em;
            }
        </style>
    </ui:define>

    <ui:define name="content">
        <h1 class="title ui-widget-header ui-corner-all">DataTable - Filtering</h1>
        <div class="entry">
            <p>Datatable provides column based and global data filtering feature. There are various different match modes, "startsWith"(default), "endsWith",
            "contains", "exact", "lte", "lt", "gte", "gt", "in" and "equals". In addition to built-in generated filter elements, custom components can be used as filter facets.</p>

            <h:form id="form">
                
                <p:dataTable id="dataTable" var="car" value="#{tableBean.carsSmall}" widgetVar="carsTable"
                             emptyMessage="No cars found with given criteria" filteredValue="#{tableBean.filteredCars}">

                    <f:facet name="header">
                        <p:outputPanel>
                            <h:outputText value="Search all fields:" />
                            <p:inputText id="globalFilter" onkeyup="PF('carsTable').filter()" style="width:150px" placeholder="Enter keyword"/>
                        </p:outputPanel>
                    </f:facet>

                    <p:column id="modelColumn" filterBy="model" headerText="Model" footerText="contains" filterMatchMode="contains">
                        <h:outputText value="#{car.model}" />
                    </p:column>

                    <p:column id="yearColumn" filterBy="year" headerText="Year" footerText="lte" filterMatchMode="lte">
                        <f:facet name="filter">
                            <p:spinner onchange="PF('carsTable').filter()" min="1960" max="2010" styleClass="year-spinner">
                                <f:converter converterId="javax.faces.Integer" />
                            </p:spinner>
                        </f:facet>
                        <h:outputText value="#{car.year}" />
                    </p:column>

                    <p:column id="manufacturerColumn" filterBy="manufacturer" headerText="Manufacturer" footerText="exact" filterMatchMode="exact">
                        <f:facet name="filter">
                            <p:selectOneMenu onchange="PF('carsTable').filter()" >
                                <f:selectItems value="#{tableBean.manufacturerOptions}" />
                            </p:selectOneMenu>
                        </f:facet>
                        <h:outputText value="#{car.manufacturer}" />
                    </p:column>

                    <p:column id="colorColumn" filterBy="color" headerText="Color" footerText="in" filterMatchMode="in">
                        <f:facet name="filter">
                            <p:selectCheckboxMenu label="Colors" onchange="PF('carsTable').filter()" panelStyle="width:125px" scrollHeight="150">
                                <f:selectItems value="#{tableBean.colors}" />
                            </p:selectCheckboxMenu>
                        </f:facet>
                        <h:outputText value="#{car.color}" />
                    </p:column>
                    
                    <p:column id="soldColumn" filterBy="sold" headerText="Status" footerText="equals" filterMatchMode="equals">
                        <f:facet name="filter">
                            <p:selectOneButton onchange="PF('carsTable').filter()">
                                <f:converter converterId="javax.faces.Boolean" />
                                <f:selectItem itemLabel="All" itemValue="" />
                                <f:selectItem itemLabel="Sold" itemValue="true" />
                                <f:selectItem itemLabel="Sale" itemValue="false" />
                            </p:selectOneButton>
                        </f:facet>
                        <h:outputText value="#{car.sold ? 'Sold': 'Sale'}" />
                    </p:column>
                    
                    <p:column id="priceColumn" filterBy="price" headerText="Price" footerText="custom (min)" filterFunction="#{tableBean.filterByPrice}">
                        <h:outputText value="#{car.price}">
                            <f:convertNumber currencySymbol="$" type="currency"/>
                        </h:outputText>
                    </p:column>

                </p:dataTable>

            </h:form>

            <h3>Source</h3>
            <p:tabView>                
                <p:tab title="datatableFiltering.xhtml">
                    <pre name="code" class="brush:xml">
&lt;h:form id="form"&gt;
                
    &lt;p:dataTable id="dataTable" var="car" value="\#{tableBean.carsSmall}" widgetVar="carsTable"
                 emptyMessage="No cars found with given criteria" filteredValue="\#{tableBean.filteredCars}"&gt;

        &lt;f:facet name="header"&gt;
            &lt;p:outputPanel&gt;
                &lt;h:outputText value="Search all fields:" /&gt;
                &lt;p:inputText id="globalFilter" onkeyup="PF('carsTable').filter()" style="width:150px" placeholder="Enter keyword"/&gt;
            &lt;/p:outputPanel&gt;
        &lt;/f:facet&gt;

        &lt;p:column id="modelColumn" filterBy="model" headerText="Model" footerText="contains" filterMatchMode="contains"&gt;
            &lt;h:outputText value="\#{car.model}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column id="yearColumn" filterBy="year" headerText="Year" footerText="lte" filterMatchMode="lte"&gt;
            &lt;f:facet name="filter"&gt;
                &lt;p:spinner onchange="PF('carsTable').filter()" min="1960" max="2010" styleClass="year-spinner"&gt;
                    &lt;f:converter converterId="javax.faces.Integer" /&gt;
                &lt;/p:spinner&gt;
            &lt;/f:facet&gt;
            &lt;h:outputText value="\#{car.year}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column id="manufacturerColumn" filterBy="manufacturer" headerText="Manufacturer" footerText="exact" filterMatchMode="exact"&gt;
            &lt;f:facet name="filter"&gt;
                &lt;p:selectOneMenu onchange="PF('carsTable').filter()" &gt;
                    &lt;f:selectItems value="\#{tableBean.manufacturerOptions}" /&gt;
                &lt;/p:selectOneMenu&gt;
            &lt;/f:facet&gt;
            &lt;h:outputText value="\#{car.manufacturer}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column id="colorColumn" filterBy="color" headerText="Color" footerText="in" filterMatchMode="in"&gt;
            &lt;f:facet name="filter"&gt;
                &lt;p:selectCheckboxMenu label="Colors" onchange="PF('carsTable').filter()" panelStyle="width:125px" scrollHeight="150"&gt;
                    &lt;f:selectItems value="\#{tableBean.colors}" /&gt;
                &lt;/p:selectCheckboxMenu&gt;
            &lt;/f:facet&gt;
            &lt;h:outputText value="\#{car.color}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column id="soldColumn" filterBy="sold" headerText="Status" footerText="equals" filterMatchMode="equals"&gt;
            &lt;f:facet name="filter"&gt;
                &lt;p:selectOneButton onchange="PF('carsTable').filter()"&gt;
                    &lt;f:converter converterId="javax.faces.Boolean" /&gt;
                    &lt;f:selectItem itemLabel="All" itemValue="" /&gt;
                    &lt;f:selectItem itemLabel="Sold" itemValue="true" /&gt;
                    &lt;f:selectItem itemLabel="Sale" itemValue="false" /&gt;
                &lt;/p:selectOneButton&gt;
            &lt;/f:facet&gt;
            &lt;h:outputText value="\#{car.sold ? 'Sold': 'Sale'}" /&gt;
        &lt;/p:column&gt;

        &lt;p:column id="priceColumn" filterBy="price" headerText="Price" footerText="custom (min)" filterFunction="\#{tableBean.filterByPrice}"&gt;
            &lt;h:outputText value="\#{car.price}"&gt;
                &lt;f:convertNumber currencySymbol="$" type="currency"/&gt;
            &lt;/h:outputText&gt;
        &lt;/p:column&gt;

    &lt;/p:dataTable&gt;

&lt;/h:form&gt;
                    </pre>
                </p:tab>

                <p:tab title="TableBean.java">
                    <pre name="code" class="brush:java">
package org.primefaces.examples.view;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.primefaces.examples.domain.Car;

public class TableBean implements Serializable {

	static {
		colors = new String[10];
		colors[0] = "Black";
		colors[1] = "White";
		colors[2] = "Green";
		colors[3] = "Red";
		colors[4] = "Blue";
		colors[5] = "Orange";
		colors[6] = "Silver";
		colors[7] = "Yellow";
		colors[8] = "Brown";
		colors[9] = "Maroon";

		manufacturers = new String[10];
		manufacturers[0] = "Mercedes";
		manufacturers[1] = "BMW";
		manufacturers[2] = "Volvo";
		manufacturers[3] = "Audi";
		manufacturers[4] = "Renault";
		manufacturers[5] = "Opel";
		manufacturers[6] = "Volkswagen";
		manufacturers[7] = "Chrysler";
		manufacturers[8] = "Ferrari";
		manufacturers[9] = "Ford";
	}

    private final static String[] colors;

	private final static String[] manufacturers;

    private SelectItem[] manufacturerOptions;

    private List&lt;Car&gt; filteredCars;

	private List&lt;Car&gt; carsSmall;

	public TableBean() {
		carsSmall = new ArrayList&lt;Car&gt;();

		populateRandomCars(carsSmall, 9);
        manufacturerOptions = createFilterOptions(manufacturers);
	}

	private void populateRandomCars(List&lt;Car&gt; list, int size) {
		for(int i = 0 ; i &lt; size ; i++)
			list.add(new Car(getRandomModel(), getRandomYear(), getRandomManufacturer(), getRandomColor(), getRandomPrice(), getRandomSoldState()));
	}

    public List&lt;Car&gt; getFilteredCars() {
        return filteredCars;
    }

    public void setFilteredCars(List&lt;Car&gt; filteredCars) {
        this.filteredCars = filteredCars;
    }

	public List&lt;Car&gt; getCarsSmall() {
		return carsSmall;
	}

	private int getRandomYear() {
		return (int) (Math.random() * 50 + 1960);
	}

	private String getRandomColor() {
		return colors[(int) (Math.random() * 10)];
	}

	private String getRandomManufacturer() {
		return manufacturers[(int) (Math.random() * 10)];
	}

	private String getRandomModel() {
		return UUID.randomUUID().toString().substring(0, 8);
	}

    public int getRandomPrice() {
		return (int) (Math.random() * 100000);
	}
    
    public boolean getRandomSoldState() {
		return (Math.random() > 0.5d) ? true: false;
	}

    public SelectItem[] getManufacturerOptions() {
        return manufacturerOptions;
    }

    public boolean filterByPrice(Object value, Object filter, Locale locale) {
        String filterText = (filter == null) ? null : filter.toString().trim();
        if(filterText == null||filterText.equals("")) {
            return true;
        }
        
        if(value == null) {
            return false;
        }
        
        return ((Comparable) value).compareTo(Integer.valueOf(filterText)) > 0;
    }
}
                    </pre>
                </p:tab>
            </p:tabView>

        </div>

    </ui:define>
</ui:composition>
